# -*- coding: utf-8 -*-
"""salary_SoftEng.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fYhuiIwEt5PQwAj1sC57mAeY3Ecidocz
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

df = pd.read_csv('/content/Software Engineer Salaries.csv')

df.head()

df.info()

df.describe()

# Mostrando todos os dados individualmente
for i in df.columns:
  print(i)
  print(df[i].unique())
  print('\n')

df.isnull().sum()

df.dropna(inplace=True)

# Removendo "(Glassdoor est.)" e "(Employer est.)" da coluna Salary
df['Salary'] = df['Salary'].str.replace(r"\s*\(Glassdoor est.\)", "", regex=True)
df['Salary'] = df['Salary'].str.replace(r"\s*\(Employer est.\)", "", regex=True)

df.head()

# Usando regex para capturar o valor mínimo e máximo
df[['Min_Salary', 'Max_Salary']] = df['Salary'].str.extract(r'(\$[\dK]+)(?: - )?(\$[\dK]+)?', expand=True)

# Preenchendo os valores únicos nas duas colunas (Min_Salary e Max_Salary)
df['Max_Salary'] = df['Max_Salary'].fillna(df['Min_Salary'])

# Exibindo o DataFrame atualizado
df.head()

# Removendo '$' e substituindo 'K' por '000', depois convertendo para inteiros
df['Min_Salary'] = df['Min_Salary'].str.replace('$', '').str.replace('K', '000').astype(int)
df['Max_Salary'] = df['Max_Salary'].str.replace('$', '').str.replace('K', '000').astype(int)

df.describe()

df.drop('Salary', axis=1, inplace=True)
df.drop('Date', axis=1, inplace=True)

df.head()

df.describe()

# Removendo as linhas onde Min_Salary é menor ou igual a 1000
df = df.loc[df['Min_Salary'] > 10000]

df.describe()

# Ajusta o tamanho da figura
plt.figure(figsize=(10, 8))  # Largura e altura em polegadas

# Removendo as linhas onde Max_Salary é menor ou igual a 350000
df_max_loc = df.loc[df['Max_Salary'] > 440000]

# Cria o gráfico de barras
sns.barplot(x='Location', y='Max_Salary', data=df_max_loc)

# Adiciona rótulos e título
plt.xlabel('Location')
plt.ylabel('Max Salary')
plt.title('Max Salary by Location')

# Exibe o gráfico
plt.show()

# Ajusta o tamanho da figura
plt.figure(figsize=(10, 8))  # Largura e altura em polegadas

# Removendo as linhas onde Max_Salary é menor ou igual a 350000
df_min_loc = df.loc[df['Min_Salary'] < 50000]

# Cria o gráfico de barras
sns.barplot(x='Location', y='Min_Salary', data=df_min_loc)

# Adiciona rótulos e título
plt.xlabel('Location')
plt.ylabel('Min_Salary')
plt.title('Min_Salary by Location')

# Exibe o gráfico
plt.show()

# Ajusta o tamanho da figura
plt.figure(figsize=(10, 8))

# Cria o gráfico de barras
sns.barplot(x='Company Score', y='Max_Salary', data=df)

# Adiciona rótulos e título
plt.xlabel('Company Score')
plt.ylabel('Max_Salary')
plt.title('Max_Salary by Company Score')

# Exibe o gráfico
plt.show()

# Ajusta o tamanho da figura
plt.figure(figsize=(10, 8))

# Cria o gráfico de barras
sns.barplot(x='Company Score', y='Min_Salary', data=df)

# Adiciona rótulos e título
plt.xlabel('Company Score')
plt.ylabel('Min_Salary')
plt.title('Min_Salary by Company Score')

# Exibe o gráfico
plt.show()

# Ajusta o tamanho da figura
plt.figure(figsize=(10, 8))  # Largura e altura em polegadas

# Removendo as linhas onde Max_Salary é menor ou igual a 350000
df_max_loc = df.loc[df['Max_Salary'] > 440000]

# Cria o gráfico de barras
sns.barplot(x='Company', y='Max_Salary', data=df_max_loc)

# Adiciona rótulos e título
plt.xlabel('Company')
plt.ylabel('Max Salary')
plt.title('Max Salary by Company')

# Exibe o gráfico
plt.show()

# Ajusta o tamanho da figura
plt.figure(figsize=(10, 8))  # Largura e altura em polegadas

# Removendo as linhas onde Max_Salary é menor ou igual a 350000
df_min_loc = df.loc[df['Min_Salary'] < 50000]

# Cria o gráfico de barras
sns.barplot(x='Company', y='Min_Salary', data=df_min_loc)

# Adiciona rótulos e título
plt.xlabel('Company')
plt.ylabel('Min_Salary')
plt.title('Min_Salary by Company')

# Exibe o gráfico
plt.show()